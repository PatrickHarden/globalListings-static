{"version":3,"sources":["webpack:///./src/views/country/index.tsx"],"names":["Country","countryName","pageContext","title","DataContainer","styled","div"],"mappings":"2FAAA,oEA0CeA,UA/BY,SAAC,GAAsC,IAArBC,EAAqB,EAApCC,YAAeD,YAQzC,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKE,MAAM,mBACX,4BAAKF,GACL,kBAACG,EAAD,QAqBZ,IAAMA,EAAgBC,IAAOC,IAAV,6EAAGD,CAAH","file":"component---src-views-country-index-tsx-4ca40579028b3f90417c.js","sourcesContent":["import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n//\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\n\ninterface Props {\n    pageContext: any\n}\n\nconst Country: FC<Props> = ({ pageContext: { countryName  } }) => {\n\n    // const countries = countryInfo.sort((a: any, b: any) => {\n    //     var textA = a.countryName.toUpperCase();\n    //     var textB = b.countryName.toUpperCase();\n    //     return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n    // });\n\n    return (\n        <Layout>\n            <SEO title=\"Property Types\" />\n            <h1>{countryName}</h1>\n            <DataContainer>\n                {/* <ul>\n                    {countryLeaseRegionData.map((regions: any) => (\n                        regions.regions.map((region: any) => (\n                            <li key={region.region}><Link to={'/properties/' + countryName + '/' + region.region}>{region.region}</Link></li>\n                        ))\n                    ))}\n                    {countrySaleRegionData.map((regions: any) => (\n                        regions.regions.map((region: any) => (\n                            <li key={region.region}><Link to={'/properties/' + countryName + '/' + region.region}>{region.region}</Link></li>\n                        ))\n                    ))}\n                </ul> */}\n            </DataContainer>\n        </Layout>\n    )\n}\n\n\nexport default Country;\n\nconst DataContainer = styled.div`\n    display:block;\n    float:left;\n    max-width:100%;\n  `\n"],"sourceRoot":""}